{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\online store website\\\\Skinecare-Makeup\\\\client\\\\src\\\\pages\\\\Admin\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport ReactQuill from \"react-quill\";\nimport 'react-quill/dist/quill.snow.css';\nimport { useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport Editor from \"../Editor\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePost() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [content, setContent] = useState('');\n  const [files, setFiles] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  async function createNewPost(ev) {\n    e.preventDefault();\n    try {\n      const {\n        data\n      } = await axios.post(\"/api/v1/post/create-post\", {\n        title,\n        summary,\n        content,\n        files\n      });\n      if (data !== null && data !== void 0 && data.success) {\n        toast.success(` is created`);\n        getAllCategory();\n      } else {\n        toast.error(data.message);\n      }\n    } catch (error) {\n      console.log(error);\n      // toast.error(\"somthing went wrong in input form\");\n    }\n  }\n\n  ;\n  //     const data = new FormData();\n  //     data.set('title', title);\n  //     data.set('summary', summary);\n  //     data.set('content', content);\n  //     data.set('file', files[0]);\n  //     ev.preventDefault();\n  //     const response = await fetch('http://localhost:4000/post', {\n  //       method: 'POST',\n  //       body: data,\n  //       credentials: 'include',\n  //     });\n  //     if (response.ok) {\n  //       setRedirect(true);\n  //     }\n  //   }\n\n  //   if (redirect) {\n  //     return <Navigate to={'/'} />\n  //   }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: createNewPost,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"title\",\n      placeholder: 'Title',\n      value: title,\n      onChange: ev => setTitle(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"summary\",\n      placeholder: 'Summary',\n      value: summary,\n      onChange: ev => setSummary(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: ev => setFiles(ev.target.files)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      value: content,\n      onChange: setContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: '5px'\n      },\n      children: \"Create post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatePost, \"ab9VCJ5uQ7LGBUgw+ez65rI1pp0=\");\n_c = CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["ReactQuill","useState","Navigate","Editor","axios","CreatePost","title","setTitle","summary","setSummary","content","setContent","files","setFiles","redirect","setRedirect","createNewPost","ev","e","preventDefault","data","post","success","toast","getAllCategory","error","message","console","log","target","value","marginTop"],"sources":["C:/Users/HP/Desktop/online store website/Skinecare-Makeup/client/src/pages/Admin/CreatePost.js"],"sourcesContent":["import ReactQuill from \"react-quill\";\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport {useState} from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport Editor from \"../Editor\";\r\nimport axios from \"axios\";\r\nexport default function CreatePost() {\r\n  const [title,setTitle] = useState('');\r\n  const [summary,setSummary] = useState('');\r\n  const [content,setContent] = useState('');\r\n  const [files, setFiles] = useState('');\r\n  const [redirect, setRedirect] = useState(false);\r\n  async function createNewPost(ev) {\r\n\r\n    e.preventDefault();\r\n    try {\r\n      const { data } = await axios.post(\"/api/v1/post/create-post\", {\r\n        title,\r\n        summary,\r\n        content,\r\n        files,\r\n      });\r\n      if (data?.success) {\r\n        toast.success(` is created`);\r\n        getAllCategory();\r\n      } else {\r\n        toast.error(data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      // toast.error(\"somthing went wrong in input form\");\r\n    }\r\n  };\r\n//     const data = new FormData();\r\n//     data.set('title', title);\r\n//     data.set('summary', summary);\r\n//     data.set('content', content);\r\n//     data.set('file', files[0]);\r\n//     ev.preventDefault();\r\n//     const response = await fetch('http://localhost:4000/post', {\r\n//       method: 'POST',\r\n//       body: data,\r\n//       credentials: 'include',\r\n//     });\r\n//     if (response.ok) {\r\n//       setRedirect(true);\r\n//     }\r\n//   }\r\n\r\n//   if (redirect) {\r\n//     return <Navigate to={'/'} />\r\n//   }\r\n  return (\r\n    <form onSubmit={createNewPost}>\r\n      <input type=\"title\"\r\n             placeholder={'Title'}\r\n             value={title}\r\n             onChange={ev => setTitle(ev.target.value)} />\r\n      <input type=\"summary\"\r\n             placeholder={'Summary'}\r\n             value={summary}\r\n             onChange={ev => setSummary(ev.target.value)} />\r\n      <input type=\"file\"\r\n             onChange={ev => setFiles(ev.target.files)} />\r\n      <Editor value={content} onChange={setContent} />\r\n      <button style={{marginTop:'5px'}}>Create post</button>\r\n    </form>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,aAAa;AACpC,OAAO,iCAAiC;AACxC,SAAQC,QAAQ,QAAO,OAAO;AAC9B,SAAQC,QAAQ,QAAO,kBAAkB;AACzC,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,KAAK,MAAM,OAAO;AAAC;AAC1B,eAAe,SAASC,UAAU,GAAG;EAAA;EACnC,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACO,OAAO,EAACC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACS,OAAO,EAACC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC/C,eAAee,aAAa,CAACC,EAAE,EAAE;IAE/BC,CAAC,CAACC,cAAc,EAAE;IAClB,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,0BAA0B,EAAE;QAC5Df,KAAK;QACLE,OAAO;QACPE,OAAO;QACPE;MACF,CAAC,CAAC;MACF,IAAIQ,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEE,OAAO,EAAE;QACjBC,KAAK,CAACD,OAAO,CAAE,aAAY,CAAC;QAC5BE,cAAc,EAAE;MAClB,CAAC,MAAM;QACLD,KAAK,CAACE,KAAK,CAACL,IAAI,CAACM,OAAO,CAAC;MAC3B;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdE,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;MAClB;IACF;EACF;;EAAC;EACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACE,oBACE;IAAM,QAAQ,EAAET,aAAc;IAAA,wBAC5B;MAAO,IAAI,EAAC,OAAO;MACZ,WAAW,EAAE,OAAQ;MACrB,KAAK,EAAEV,KAAM;MACb,QAAQ,EAAEW,EAAE,IAAIV,QAAQ,CAACU,EAAE,CAACY,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eACpD;MAAO,IAAI,EAAC,SAAS;MACd,WAAW,EAAE,SAAU;MACvB,KAAK,EAAEtB,OAAQ;MACf,QAAQ,EAAES,EAAE,IAAIR,UAAU,CAACQ,EAAE,CAACY,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eACtD;MAAO,IAAI,EAAC,MAAM;MACX,QAAQ,EAAEb,EAAE,IAAIJ,QAAQ,CAACI,EAAE,CAACY,MAAM,CAACjB,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eACpD,QAAC,MAAM;MAAC,KAAK,EAAEF,OAAQ;MAAC,QAAQ,EAAEC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eAChD;MAAQ,KAAK,EAAE;QAACoB,SAAS,EAAC;MAAK,CAAE;MAAA,UAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACjD;AAEX;AAAC,GA9DuB1B,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}