{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { Checkbox, Radio } from \"antd\";\n// import { Prices } from \"../components/Prices\";\n// import { useCart } from \"../context/cart\";\n// import axios from \"axios\";\n// import toast from \"react-hot-toast\";\n// import Layout from \"../components/Layout/Layout\";\n// import { AiOutlineReload } from \"react-icons/ai\";\n// import \"../styles/Homepage.css\";\n// import { useTranslation } from \"react-i18next\";\n\n// const DropShippingProductPage = () => {\n//   const { t } = useTranslation();\n//   const navigate = useNavigate();\n//   const [cart, setCart] = useCart();\n//   const [dropShippingProducts, setDropShippingProducts] = useState([]);\n//   const [categories, setCategories] = useState([]);\n//   const [checked, setChecked] = useState([]);\n//   const [radio, setRadio] = useState([]);\n//   const [total, setTotal] = useState(0);\n//   const [page, setPage] = useState(1);\n//   const [loading, setLoading] = useState(false);\n\n//   //get all cat\n//   const getAllCategory = async () => {\n//     try {\n//       const { data } = await axios.get(\"/api/v1/category/get-category\");\n//       if (data?.success) {\n//         setCategories(data?.category);\n//       }\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     getAllCategory();\n//     getTotal();\n//   }, []);\n//   //get products\n//   const getAllDropShippingProducts = async () => {\n//     try {\n//       setLoading(true);\n//       const { data } = await axios.get(`/api/v1/dropShippingProduct/dropShippingProduct-list/${page}`);\n//       setLoading(false);\n//       setDropShippingProducts(data.products);\n//     } catch (error) {\n//       setLoading(false);\n//       console.log(error);\n//     }\n//   };\n\n//   //getTOtal COunt\n//   const getTotal = async () => {\n//     try {\n//       const { data } = await axios.get(\"/api/v1/dropShippingProduct/dropShippingProduct-count\");\n//       setTotal(data?.total);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (page === 1) return;\n//     loadMore();\n//   }, [page]);\n//   //load more\n//   const loadMore = async () => {\n//     try {\n//       setLoading(true);\n//       const { data } = await axios.get(`/api/v1/dropShippingProduct/dropShippingProduct-list/${page}`);\n//       setLoading(false);\n//       setDropShippingProducts([...dropShippingProducts, ...data?.dropShippingProducts]);\n//     } catch (error) {\n//       console.log(error);\n//       setLoading(false);\n//     }\n//   };\n\n//   // filter by cat\n//   const handleFilter = (value, id) => {\n//     let all = [...checked];\n//     if (value) {\n//       all.push(id);\n//     } else {\n//       all = all.filter((c) => c !== id);\n//     }\n//     setChecked(all);\n//   };\n//   useEffect(() => {\n//     if (!checked.length || !radio.length) getAllDropShippingProducts();\n//   }, [checked.length, radio.length]);\n\n//   useEffect(() => {\n//     if (checked.length || radio.length) filterDropShippingProduct();\n//   }, [checked, radio]);\n\n//   //get filterd product\n//   const filterDropShippingProduct = async () => {\n//     try {\n//       const { data } = await axios.post(\"/api/v1/dropShippingProduct/dropShippingProduct-filters\", {\n//         checked,\n//         radio,\n//       });\n//       setDropShippingProducts(data?.dropShippingProducts);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n//   return (\n//     <Layout title={\"ALl Drop Shopping Products - Best offers \"}>\n//       {/* banner image */}\n//       <img\n//         src=\"/images/banner2.png\"\n//         className=\"banner-img\"\n//         alt=\"bannerimage\"\n//         width={\"100%\"}\n//         height={\"400px\"}\n//       />\n//       {/* banner image */}\n//       <div className=\"container-fluid row mt-3 home-page\">\n//         <div className=\"col-md-3 filters\">\n//           <h4 className=\"text-center\">{t(\"translation:categrory\")}</h4>\n//           <div className=\"d-flex flex-column\">\n//             {categories?.map((c) => (\n//               <Checkbox\n//                 key={c._id}\n//                 onChange={(e) => handleFilter(e.target.checked, c._id)}\n//               >\n//                 {c.name}\n//               </Checkbox>\n//             ))}\n//           </div>\n//           {/* price filter */}\n//           <h4 className=\"text-center mt-4\">{t(\"translation:filterPrice\")}</h4>\n//           <div className=\"d-flex flex-column\">\n//             <Radio.Group onChange={(e) => setRadio(e.target.value)}>\n//               {Prices?.map((p) => (\n//                 <div key={p._id}>\n//                   <Radio value={p.array}>{p.name}</Radio>\n//                 </div>\n//               ))}\n//             </Radio.Group>\n//           </div>\n//           <div className=\"d-flex flex-column\">\n//             <button\n//               className=\"btn btn-danger\"\n//               onClick={() => window.location.reload()}\n//             >\n//               {t(\"translation:resetFileters\")}\n//             </button>\n//           </div>\n//         </div>\n//         <div className=\"col-md-9 \">\n//           <h1 className=\"text-center\"> {t(\"translation:allProducts\")}</h1>\n//           <div className=\"d-flex flex-wrap\">\n//             {dropShippingProducts?.map((p) => (\n//               <div className=\"card m-2\" key={p._id}>\n//                 <img\n//                   src={`/api/v1/product/product-photo/${p._id}`}\n//                   className=\"card-img-top\"\n//                   alt={p.name}\n//                 />\n//                 <div className=\"card-body\">\n//                   <div className=\"card-name-price\">\n//                     <h5 className=\"card-title\">{p.name}</h5>\n//                     <h5 className=\"card-title card-price\">\n//                       {p.price.toLocaleString(\"en-US\", {\n//                         style: \"currency\",\n//                         currency: \"USD\",\n//                       })}\n//                     </h5>\n//                   </div>\n//                   <p className=\"card-text \">\n//                     {p.description.substring(0, 60)}...\n//                   </p>\n//                   <div className=\"card-name-price\">\n//                     <button\n//                       className=\"btn btn-info ms-1\"\n//                       onClick={() => navigate(`/dropShippingProduct/${p.slug}`)}\n//                     >\n//                      {t(\"translation:moreDetails\")}\n//                     </button>\n//                     <button\n//                       className=\"btn btn-dark ms-1\"\n//                       onClick={() => {\n//                         setCart([...cart, p]);\n//                         localStorage.setItem(\n//                           \"cart\",\n//                           JSON.stringify([...cart, p])\n//                         );\n//                         toast.success(\"Item Added to cart\");\n//                       }}\n//                     >\n//                       {t(\"translation:addToCart\")}\n//                     </button>\n//                   </div>\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n//           <div className=\"m-2 p-3\">\n//             {dropShippingProducts && dropShippingProducts.length < total && (\n//               <button\n//                 className=\"btn loadmore\"\n//                 onClick={(e) => {\n//                   e.preventDefault();\n//                   setPage(page + 1);\n//                 }}\n//               >\n//                 {loading ? (\n//                   \"Loading ...\"\n//                 ) : (\n//                   <>\n//                     {\" \"}\n//                     {t(\"translation:Loadmore\")} <AiOutlineReload />\n//                   </>\n//                 )}\n//               </button>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n//     </Layout>\n//   );\n// };\n\n// export default DropShippingProductPage;","map":{"version":3,"names":[],"sources":["C:/Users/HP/Desktop/online store website/Skinecare-Makeup/client/src/pages/DropShippingProductPage.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { Checkbox, Radio } from \"antd\";\r\n// import { Prices } from \"../components/Prices\";\r\n// import { useCart } from \"../context/cart\";\r\n// import axios from \"axios\";\r\n// import toast from \"react-hot-toast\";\r\n// import Layout from \"../components/Layout/Layout\";\r\n// import { AiOutlineReload } from \"react-icons/ai\";\r\n// import \"../styles/Homepage.css\";\r\n// import { useTranslation } from \"react-i18next\";\r\n\r\n// const DropShippingProductPage = () => {\r\n//   const { t } = useTranslation();\r\n//   const navigate = useNavigate();\r\n//   const [cart, setCart] = useCart();\r\n//   const [dropShippingProducts, setDropShippingProducts] = useState([]);\r\n//   const [categories, setCategories] = useState([]);\r\n//   const [checked, setChecked] = useState([]);\r\n//   const [radio, setRadio] = useState([]);\r\n//   const [total, setTotal] = useState(0);\r\n//   const [page, setPage] = useState(1);\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   //get all cat\r\n//   const getAllCategory = async () => {\r\n//     try {\r\n//       const { data } = await axios.get(\"/api/v1/category/get-category\");\r\n//       if (data?.success) {\r\n//         setCategories(data?.category);\r\n//       }\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     getAllCategory();\r\n//     getTotal();\r\n//   }, []);\r\n//   //get products\r\n//   const getAllDropShippingProducts = async () => {\r\n//     try {\r\n//       setLoading(true);\r\n//       const { data } = await axios.get(`/api/v1/dropShippingProduct/dropShippingProduct-list/${page}`);\r\n//       setLoading(false);\r\n//       setDropShippingProducts(data.products);\r\n//     } catch (error) {\r\n//       setLoading(false);\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n\r\n//   //getTOtal COunt\r\n//   const getTotal = async () => {\r\n//     try {\r\n//       const { data } = await axios.get(\"/api/v1/dropShippingProduct/dropShippingProduct-count\");\r\n//       setTotal(data?.total);\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (page === 1) return;\r\n//     loadMore();\r\n//   }, [page]);\r\n//   //load more\r\n//   const loadMore = async () => {\r\n//     try {\r\n//       setLoading(true);\r\n//       const { data } = await axios.get(`/api/v1/dropShippingProduct/dropShippingProduct-list/${page}`);\r\n//       setLoading(false);\r\n//       setDropShippingProducts([...dropShippingProducts, ...data?.dropShippingProducts]);\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   // filter by cat\r\n//   const handleFilter = (value, id) => {\r\n//     let all = [...checked];\r\n//     if (value) {\r\n//       all.push(id);\r\n//     } else {\r\n//       all = all.filter((c) => c !== id);\r\n//     }\r\n//     setChecked(all);\r\n//   };\r\n//   useEffect(() => {\r\n//     if (!checked.length || !radio.length) getAllDropShippingProducts();\r\n//   }, [checked.length, radio.length]);\r\n\r\n//   useEffect(() => {\r\n//     if (checked.length || radio.length) filterDropShippingProduct();\r\n//   }, [checked, radio]);\r\n\r\n//   //get filterd product\r\n//   const filterDropShippingProduct = async () => {\r\n//     try {\r\n//       const { data } = await axios.post(\"/api/v1/dropShippingProduct/dropShippingProduct-filters\", {\r\n//         checked,\r\n//         radio,\r\n//       });\r\n//       setDropShippingProducts(data?.dropShippingProducts);\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n//   return (\r\n//     <Layout title={\"ALl Drop Shopping Products - Best offers \"}>\r\n//       {/* banner image */}\r\n//       <img\r\n//         src=\"/images/banner2.png\"\r\n//         className=\"banner-img\"\r\n//         alt=\"bannerimage\"\r\n//         width={\"100%\"}\r\n//         height={\"400px\"}\r\n//       />\r\n//       {/* banner image */}\r\n//       <div className=\"container-fluid row mt-3 home-page\">\r\n//         <div className=\"col-md-3 filters\">\r\n//           <h4 className=\"text-center\">{t(\"translation:categrory\")}</h4>\r\n//           <div className=\"d-flex flex-column\">\r\n//             {categories?.map((c) => (\r\n//               <Checkbox\r\n//                 key={c._id}\r\n//                 onChange={(e) => handleFilter(e.target.checked, c._id)}\r\n//               >\r\n//                 {c.name}\r\n//               </Checkbox>\r\n//             ))}\r\n//           </div>\r\n//           {/* price filter */}\r\n//           <h4 className=\"text-center mt-4\">{t(\"translation:filterPrice\")}</h4>\r\n//           <div className=\"d-flex flex-column\">\r\n//             <Radio.Group onChange={(e) => setRadio(e.target.value)}>\r\n//               {Prices?.map((p) => (\r\n//                 <div key={p._id}>\r\n//                   <Radio value={p.array}>{p.name}</Radio>\r\n//                 </div>\r\n//               ))}\r\n//             </Radio.Group>\r\n//           </div>\r\n//           <div className=\"d-flex flex-column\">\r\n//             <button\r\n//               className=\"btn btn-danger\"\r\n//               onClick={() => window.location.reload()}\r\n//             >\r\n//               {t(\"translation:resetFileters\")}\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"col-md-9 \">\r\n//           <h1 className=\"text-center\"> {t(\"translation:allProducts\")}</h1>\r\n//           <div className=\"d-flex flex-wrap\">\r\n//             {dropShippingProducts?.map((p) => (\r\n//               <div className=\"card m-2\" key={p._id}>\r\n//                 <img\r\n//                   src={`/api/v1/product/product-photo/${p._id}`}\r\n//                   className=\"card-img-top\"\r\n//                   alt={p.name}\r\n//                 />\r\n//                 <div className=\"card-body\">\r\n//                   <div className=\"card-name-price\">\r\n//                     <h5 className=\"card-title\">{p.name}</h5>\r\n//                     <h5 className=\"card-title card-price\">\r\n//                       {p.price.toLocaleString(\"en-US\", {\r\n//                         style: \"currency\",\r\n//                         currency: \"USD\",\r\n//                       })}\r\n//                     </h5>\r\n//                   </div>\r\n//                   <p className=\"card-text \">\r\n//                     {p.description.substring(0, 60)}...\r\n//                   </p>\r\n//                   <div className=\"card-name-price\">\r\n//                     <button\r\n//                       className=\"btn btn-info ms-1\"\r\n//                       onClick={() => navigate(`/dropShippingProduct/${p.slug}`)}\r\n//                     >\r\n//                      {t(\"translation:moreDetails\")}\r\n//                     </button>\r\n//                     <button\r\n//                       className=\"btn btn-dark ms-1\"\r\n//                       onClick={() => {\r\n//                         setCart([...cart, p]);\r\n//                         localStorage.setItem(\r\n//                           \"cart\",\r\n//                           JSON.stringify([...cart, p])\r\n//                         );\r\n//                         toast.success(\"Item Added to cart\");\r\n//                       }}\r\n//                     >\r\n//                       {t(\"translation:addToCart\")}\r\n//                     </button>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//           <div className=\"m-2 p-3\">\r\n//             {dropShippingProducts && dropShippingProducts.length < total && (\r\n//               <button\r\n//                 className=\"btn loadmore\"\r\n//                 onClick={(e) => {\r\n//                   e.preventDefault();\r\n//                   setPage(page + 1);\r\n//                 }}\r\n//               >\r\n//                 {loading ? (\r\n//                   \"Loading ...\"\r\n//                 ) : (\r\n//                   <>\r\n//                     {\" \"}\r\n//                     {t(\"translation:Loadmore\")} <AiOutlineReload />\r\n//                   </>\r\n//                 )}\r\n//               </button>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </Layout>\r\n//   );\r\n// };\r\n\r\n// export default DropShippingProductPage;"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}